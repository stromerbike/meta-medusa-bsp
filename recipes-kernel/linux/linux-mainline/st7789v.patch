From 9ccea35ec735e417cdad067ff8f971babc59d8c0 Mon Sep 17 00:00:00 2001
From: Stefan Eichenberger <eichest@gmail.com>
Date: Mon, 10 Jul 2023 13:44:21 +0200
Subject: [PATCH] drm/panel: sitronix-st7789v: set correct mode for Stromer

Stromer only connects the display with 16 data lines. Therefore, we have
to force 565 mode. Further, it seems the default driver inverts the
colors on the display which is not what we want. Then we also set the
PHSYNC and PVSYNC flags for the display mode, because this is what we
configure.

Signed-off-by: Stefan Eichenberger <eichest@gmail.com>

%% original patch: st7789v.patch
---
diff --git a/drivers/gpu/drm/panel/panel-sitronix-st7789v.c b/drivers/gpu/drm/panel/panel-sitronix-st7789v.c
index 88e80fe98112..e086e89f7e7e 100644
--- a/drivers/gpu/drm/panel/panel-sitronix-st7789v.c
+++ b/drivers/gpu/drm/panel/panel-sitronix-st7789v.c
@@ -296,10 +296,10 @@ static const struct drm_display_mode jt240mhqs_hwt_ek_e3_mode = {
 
 static const struct st7789_panel_info default_panel = {
 	.mode = &default_mode,
-	.invert_mode = true,
-	.bus_format = MEDIA_BUS_FMT_RGB666_1X18,
+	.invert_mode = false,
+	.bus_format = MEDIA_BUS_FMT_RGB565_1X16,
 	.bus_flags = DRM_BUS_FLAG_DE_HIGH |
-		     DRM_BUS_FLAG_PIXDATA_SAMPLE_NEGEDGE,
+		     DRM_BUS_FLAG_PIXDATA_SAMPLE_POSEDGE,
 };
 
 static const struct st7789_panel_info t28cp45tn89_panel = {
@@ -478,40 +478,36 @@ static int st7789v_prepare(struct drm_panel *panel)
 					     ST7789V_PWCTRL1_VDS(1)));
 
 	ST7789V_TEST(ret, st7789v_write_command(ctx, ST7789V_PVGAMCTRL_CMD));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_PVGAMCTRL_VP63(0xd)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_PVGAMCTRL_VP1(0xca)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_PVGAMCTRL_VP2(0xe)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_PVGAMCTRL_VP4(8)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_PVGAMCTRL_VP6(9)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_PVGAMCTRL_VP13(7)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_PVGAMCTRL_VP20(0x2d)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_PVGAMCTRL_VP27(0xb) |
-					     ST7789V_PVGAMCTRL_VP36(3)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_PVGAMCTRL_VP43(0x3d)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_PVGAMCTRL_JP1(3) |
-					     ST7789V_PVGAMCTRL_VP50(4)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_PVGAMCTRL_VP57(0xa)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_PVGAMCTRL_VP59(0xa)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_PVGAMCTRL_VP61(0x1b)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_PVGAMCTRL_VP62(0x28)));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0xd0));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x00));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x06));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x09));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x0b));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x2a));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x3c));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x55));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x4b));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x08));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x16));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x14));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x19));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x20));
 
 	ST7789V_TEST(ret, st7789v_write_command(ctx, ST7789V_NVGAMCTRL_CMD));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_NVGAMCTRL_VN63(0xd)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_NVGAMCTRL_VN1(0xca)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_NVGAMCTRL_VN2(0xf)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_NVGAMCTRL_VN4(8)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_NVGAMCTRL_VN6(8)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_NVGAMCTRL_VN13(7)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_NVGAMCTRL_VN20(0x2e)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_NVGAMCTRL_VN27(0xc) |
-					     ST7789V_NVGAMCTRL_VN36(5)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_NVGAMCTRL_VN43(0x40)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_NVGAMCTRL_JN1(3) |
-					     ST7789V_NVGAMCTRL_VN50(4)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_NVGAMCTRL_VN57(9)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_NVGAMCTRL_VN59(0xb)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_NVGAMCTRL_VN61(0x1b)));
-	ST7789V_TEST(ret, st7789v_write_data(ctx, ST7789V_NVGAMCTRL_VN62(0x28)));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0xd0));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x00));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x06));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x09));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x0b));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x29));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x36));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x54));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x4b));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x0d));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x16));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x14));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x21));
+	ST7789V_TEST(ret, st7789v_write_data(ctx, 0x20));
 
 	if (ctx->info->invert_mode) {
 		ST7789V_TEST(ret, st7789v_write_command(ctx,
-- 
2.39.2
